<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:HorizontalWidgetProxy="widgets.HorizontalWidgetProxy.*"
				autoDrawBackground="true"
				buttonMode="true"
				width="100%"
				click="itemrenderer_clickHandler(event)"
				dataChange="itemrenderer_dataChangeHandler(event)"
				minHeight="30"
				useHandCursor="true">
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.formats.TextAlign;
			
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			
			private const WIDGET_ITEM_CLICK:String = "widgetListItemClick";
			
			[Bindable]
			private var widgetItem:WidgetItem;
			
			private function itemrenderer_dataChangeHandler(event:FlexEvent):void
			{
				widgetItem = data as WidgetItem;
				widgetLabel.text = widgetItem.name;
				
				/*if(widgetItem.checked){
					this.currentState="selected";
				}//*/
			}
			
			private function itemrenderer_clickHandler(event:MouseEvent):void
			{
				checkChange();
				dispatchEvent(new Event(WIDGET_ITEM_CLICK, true)); // bubbles
			}
			
			private function checkChange():void
			{
				if(widgetItem.checked){
					widgetItem.checked = false;
					this.currentState="normal";
				}else{
					widgetItem.checked = true;
					this.currentState="selected";
				}
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	
	<s:Rect left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:SolidColor alpha="0"
						  alpha.hovered="0.65"
						  color.hovered="0x2B9DBF"/>
		</s:fill>
	</s:Rect>
	<!--<s:VGroup>-->
		<s:HGroup height="25" width="100%" paddingLeft="15" gap="20"
				  buttonMode="true"
				  useHandCursor="true"
				  horizontalAlign="left"
				  verticalAlign="middle">
			<s:Image source="{data.iconOff}" visible="true" includeInLayout="true"
					 visible.normal="true" includeInLayout.normal="true"
					 visible.hovered="false" includeInLayout.hovered="false"
					 visible.selected="false" includeInLayout.selected="false"/>
			<s:Image source="{data.iconOver}" visible="false" includeInLayout="false"
					 visible.normal="false" includeInLayout.normal="false"
					 visible.hovered="true" includeInLayout.hovered="true"
					 visible.selected="false" includeInLayout.selected="false"/>
			<s:Image source="{data.iconOn}" visible="false" includeInLayout="false"
					 visible.normal="false" includeInLayout.normal="false"
					 visible.hovered="false" includeInLayout.hovered="false"
					 visible.selected="true" includeInLayout.selected="true"/>
			<s:Label id="widgetLabel" width="100%"
					 color="0x4D565B" color.hovered="0xEA830D" color.selected="0xEA830D"
					 fontFamily="微软雅黑"
					 fontSize="12"
					 maxDisplayedLines="3"
					 showTruncationTip="true"/>
		</s:HGroup>
	<!--</s:VGroup>-->
</s:ItemRenderer>