<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010-2011 Esri. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
///////////////////////////////////////////////////////////////////////////
-->
<s:Group xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:esri="http://www.esri.com/2008/ags"
         xmlns:Navigation="widgets.Navigation.*">

    <fx:Script>
        <![CDATA[
            import com.esri.ags.Map;
            import com.esri.viewer.AppEvent;
            import com.esri.viewer.ViewerContainer;

            import mx.events.FlexEvent;

            import spark.events.IndexChangeEvent;

            [Bindable]
            public var map:Map;

            [Bindable]
            public var panwheelItem:NavToolItem;

            [Bindable]
            public var zoomFullextItem:NavToolItem;

            [Bindable]
            public var panupItem:NavToolItem;

            [Bindable]
            public var pandownItem:NavToolItem;

            [Bindable]
            public var panleftItem:NavToolItem;

            [Bindable]
            public var panrightItem:NavToolItem;


            [Bindable]
            public var prevextItem:NavToolItem;

            [Bindable]
            public var nextextItem:NavToolItem;

            [Bindable]
            public var zoominItem:NavToolItem;

            [Bindable]
            public var zoomoutItem:NavToolItem;

            [Bindable]
            public var panItem:NavToolItem;

            protected function buttonbar1_changeHandler(event:IndexChangeEvent):void
            {
                doNavAction(event.currentTarget.dataProvider[event.newIndex].action,
                            event.currentTarget.dataProvider[event.newIndex].label);
            }

            protected function buttonbar1_valueCommitHandler(event:FlexEvent):void
            {
                if (event.currentTarget.selectedIndex != -1)
                {
                    doNavAction(event.currentTarget.dataProvider[event.currentTarget.selectedIndex].action,
                                event.currentTarget.dataProvider[event.currentTarget.selectedIndex].label);
                }
            }

            private function doNavAction(action:String, label:String):void
            {
                var data:Object =
                    {
                        tool: action,
                        status: label
                }
                AppEvent.dispatch(AppEvent.SET_MAP_NAVIGATION, data);
            }

            public function initButtonBar():void
            {
                var navAC:ArrayCollection = new ArrayCollection();

                if (panItem.toolVisible == true)
                {
                    navAC.addItem({ label: panItem.toolName, action: "pan", imageIcon: panItem.toolIcon });
                }

                if (zoominItem.toolVisible == true)
                {
                    navAC.addItem({ label: zoominItem.toolName, action: "zoomin", imageIcon: zoominItem.toolIcon });
                }

                if (zoomoutItem.toolVisible == true)
                {
                    navAC.addItem({ label: zoomoutItem.toolName, action: "zoomout", imageIcon: zoomoutItem.toolIcon });
                }

                if (zoominItem.toolVisible == false && zoomoutItem.toolVisible == false && panItem.toolVisible == false)
                {
                    btnBar.visible = false;
                }

                btnBar.dataProvider = navAC;
            }
        ]]>
    </fx:Script>
    <s:layout>
        <s:VerticalLayout gap="3" horizontalAlign="center"/>
    </s:layout>
    <s:filters>
        <s:DropShadowFilter alpha="0.5"
                            blurX="5"
                            blurY="5"/>
    </s:filters>
    <s:Group includeInLayout="{panwheelItem.toolVisible}" visible="{panwheelItem.toolVisible}" width="54" height="54">
		<s:Rect top="0" bottom="0" right="0" left="0">
			<s:fill>
				<s:BitmapFill source="@Embed('assets/images/navigation/paner.png')"/>
			</s:fill>
		</s:Rect>
        <s:Button id="wButton"
				  verticalCenter="0" left="5"
                  click="map.panLeft()"
                  skinClass="widgets.Navigation.wButtonSkin"
                  toolTip="{panleftItem.toolName}"/>
        <s:Button id="sButton"
                  horizontalCenter="0" bottom="5"
                  click="map.panDown()"
                  skinClass="widgets.Navigation.sButtonSkin"
                  toolTip="{pandownItem.toolName}"/>
        <s:Button id="eButton"
                  verticalCenter="0" right="5"
                  click="map.panRight()"
                  skinClass="widgets.Navigation.eButtonSkin"
                  toolTip="{panrightItem.toolName}"/>
        <s:Button id="nButton"
                  click="map.panUp()"
				  horizontalCenter="0" top="5"
                  skinClass="widgets.Navigation.nButtonSkin"
                  toolTip="{panupItem.toolName}"/>
        <Navigation:IconButton id="innerButton"
                               verticalCenter="0" horizontalCenter="0"
                               click="doNavAction('zoomfull', zoomFullextItem.toolName)"
                               iconUp="{zoomFullextItem.toolIcon}"
                               skinClass="widgets.Navigation.InnerButtonSkin"
                               toolTip="{zoomFullextItem.toolName}"
                               visible="{zoomFullextItem.toolVisible}"/>
    </s:Group>
    <s:HGroup gap="0" includeInLayout="false">
    </s:HGroup>
    <esri:Navigation top="0"
                     map="{map}"
                     skinClass="widgets.Navigation.NavigationSkin"/>
    <s:VGroup paddingTop="3" visible="false">
        <s:ButtonBar id="btnBar"
                     change="buttonbar1_changeHandler(event)"
                     requireSelection="true"
                     selectedIndex="0"
                     skinClass="widgets.Navigation.VerticalButtonBarSkin"
                     valueCommit="buttonbar1_valueCommitHandler(event)">
            <s:layout>
                <s:VerticalLayout gap="0"/>
            </s:layout>
            <s:dataProvider>
                <s:ArrayCollection>
                    <fx:Object action="pan"
                               imageIcon="assets/images/i_pan.png"
                               label="Pan"/>
                    <fx:Object action="zoomin"
                               imageIcon="assets/images/i_zoomin.png"
                               label="Zoom In"
                               visible="false"/>
                    <fx:Object action="zoomout"
                               imageIcon="assets/images/i_zoomout.png"
                               label="Zoom Out"/>
                </s:ArrayCollection>
            </s:dataProvider>
        </s:ButtonBar>
    </s:VGroup>
</s:Group>
