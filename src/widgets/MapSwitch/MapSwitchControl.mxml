<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////
// Copyright (c) 2012-2013 Esri China. All Rights Reserved.
// 自定义地图切换
// 温杨彪，易智睿中国科技有限公司
// 温杨彪，2012-03-08
///////////////////////////////////////////////////////////////////////////
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  gap="0" 
		  creationComplete="vgroup1_creationCompleteHandler(event)">
-->
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   width="50" height="50" color="0xFFFFFF" 
				   borderColor="0x2B9DBF" backgroundColor="0xEBEBEB" borderWeight="1"
				   creationComplete="vgroup1_creationCompleteHandler(event)">
	<fx:Metadata>
		[Event(name="switchMap",type="widgets.MapSwitch.SwitchMapEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.esri.viewer.utils.Hashtable;
			
			import mx.events.FlexEvent;
			
			import spark.components.Image;
			
			private var _datas:Array=null;
			
			private var _imageControlTable:Hashtable = new Hashtable();
			
			private var _currentLabel:String = "";

			public function get currentLabel():String
			{
				return _currentLabel;
			}

			public function set datas(value:Array):void
			{
				_datas = value;
				if(_datas!=null && _datas.length>0)
				{					
					setCurrentImage(_datas[0].label);
				}
			}
			
			protected function vgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				if(_datas!=null && _datas.length>0)
				{
					for each(var data:Object in _datas)
					{
						_imageControlTable.add(data.label,data.unselectedIcon);
					}
					
					setCurrentImage(_datas[0].label);
				}
			}
			
			private function imgCtrl_ClickHandler(event:MouseEvent):void
			{
				setCurrentImage(currentLbl.text);
			}
			
			private function setCurrentImage(label:String):void
			{
				if(label != _currentLabel)
				{
					dispatchEvent(new SwitchMapEvent(label));
					_currentLabel = label;
				}
			}
			/**
			 * 把当前状态转移到参数label
			 * 王红亮，2013-3-11
			 */
			public function switchImage(label:String):void
			{
				if(_datas.length==2)
				{
					if(_datas[0].label==label){
						_currentImage.source = _datas[1].selectedIcon;
						_currentImage.toolTip = "显示" + _datas[1].label +"地图";
						currentLbl.text = _datas[1].label;
					}else{
						_currentImage.source = _datas[0].selectedIcon;
						_currentImage.toolTip = "显示" + _datas[0].label +"地图";
						currentLbl.text = _datas[0].label;
					}
				}
			}
			
			protected function _currentImage_mouseOverHandler(event:MouseEvent):void
			{
				setContainerStyle(false);
			}
			protected function _currentImage_mouseOutHandler(event:MouseEvent):void
			{
				setContainerStyle(true);
			}
			
			protected function lblContainer_clickHandler(event:MouseEvent):void
			{
				setCurrentImage(currentLbl.text);
			}
			protected function lblContainer_mouseOverHandler(event:MouseEvent):void
			{
				setContainerStyle(false);
			}
			protected function lblContainer_mouseOutHandler(event:MouseEvent):void
			{
				setContainerStyle(true);
			}
			
			private function setContainerStyle(isDaultStyle:Boolean):void
			{
				if(isDaultStyle){//蓝底白字
					lblContainer.setStyle("backgroundColor",0x2B9DBF);
					lblContainer.setStyle("color",0xFFFFFF);
				}else{//灰底深灰字
					lblContainer.setStyle("backgroundColor",0xEBEBEB);
					lblContainer.setStyle("color",0x4D565B);
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!--
		<s:Fade id="showFade" alphaFrom="0" alphaTo="1" target="{imgGroup}" duration="500"/>
		<s:Fade id="hideFade" alphaFrom="1" alphaTo="0" target="{imgGroup}" duration="500"/>
		<s:Fade target="{_currentImage}" alphaFrom="0" alphaTo="1" duration="500" id="currentImageFade"/>
		-->
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" paddingBottom="3" paddingTop="3" paddingLeft="3" paddingRight="3"/>
	</s:layout>
	<s:Group width="100%" height="100%">
		<s:Image id="_currentImage" useHandCursor="true" buttonMode="true" 
				 click="imgCtrl_ClickHandler(event)"
				 mouseOver="_currentImage_mouseOverHandler(event)"
				 mouseOut="_currentImage_mouseOutHandler(event)"/>
		<s:BorderContainer id="lblContainer" width="100%" height="16" bottom="0" color="0xFFFFFF" backgroundColor="0x2B9DBF" borderVisible="false"
						   click="lblContainer_clickHandler(event)"
						   mouseOver="lblContainer_mouseOverHandler(event)"
						   mouseOut="lblContainer_mouseOutHandler(event)">
			<s:layout>
				<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
			</s:layout>
			<s:Label id="currentLbl" useHandCursor="true" buttonMode="true" width="100%" textAlign="center"/>
		</s:BorderContainer>
	</s:Group>
</s:BorderContainer>
