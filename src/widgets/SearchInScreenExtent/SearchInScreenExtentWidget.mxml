<?xml version="1.0" encoding="utf-8"?>
<viewer:BaseWidget xmlns:esri="http://www.esri.com/2008/ags"
				   xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:viewer="com.esri.viewer.*"
				   xmlns:components="com.esri.viewer.components.*"
				   xmlns:customskinbutton="com.esri.viewer.components.customskinbutton.*"
				   widgetConfigLoaded="init()"
				   creationComplete="creationCompleteHandler(event)">
	<fx:Declarations>
		<!-- 打开或收起类型搜索条件面板 -->
		<s:Parallel id="groupFadeResizeHide" 
					target="{searchPanel}">
			<s:Fade duration="400"
					alphaFrom="1.0"
					alphaTo="0.0"/>
			<s:Resize duration="700"
					  widthTo="330" 
					  heightTo="18" 
					  effectEnd="pullUp_effectEndHandler(event)"/>
		</s:Parallel> 
		<s:Parallel id="groupFadeResizeShow"
					target="{searchPanel}">
			<s:Resize duration="400"
					  widthTo="330" 
					  heightTo="120"/>
			<s:Fade duration="700"
				    alphaFrom="0.0"
					alphaTo="1.0"/>
		</s:Parallel>
		<!-- 打开或收起整个面板 -->
		<s:Parallel id="fadeResizeHide"
					target="{conentContainer}">
			<s:Fade duration="400"
					alphaFrom="1.0"
					alphaTo="0.0"/>
			<s:Resize duration="700"
					  widthTo="0" 
					  heightTo="0"
					  effectEnd="content_effectEndHandler(event)"/>
		</s:Parallel>        
		<s:Sequence id="fadeResizeShow"
					target="{conentContainer}"
					duration="1500">
			<s:Resize id="resizeShow" 
					  widthTo="340" 
					  heightTo="180"/>
			<s:Fade id="fadeShow" 
					alphaFrom="0.0"
					alphaTo="1.0"/>
		</s:Sequence>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.esri.viewer.AppEvent;
			import com.esri.viewer.WidgetStates;
			import com.esri.viewer.components.customskinbutton.ImageLabelButton;
			
			import mx.controls.LinkButton;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.utils.StringUtil;
			
			import spark.components.HGroup;
			
			private var _postprocessorWidgetID:Number = -1; //视野内搜索处理WidgetID
			private var searchValue:String = ""; //查询值
			[Bindable]
			private var searchValueLabel:String = ""; //查询显示值，用于面板中的提示
			private var searchType:Number = 0;	//查询类型，0：根据POI类型编码搜索，1：根据关键字搜索
			private function init():void
			{
				if (configXML)
				{
					_postprocessorWidgetID = super.siblingWidgetId(String(configXML.proxywidget.@widget));
					//添加对视野内搜索处理widget打开状态的监听
					AppEvent.addListener(AppEvent.WIDGET_STATE_CHANGED, onOpenedPostprocessor);
					//初始化分类面板
					initRootCatalog();
				}
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				trace("");
			}
			
			//工具按钮
			private function btn_clickHandler(event:MouseEvent):void
			{
				var clickBtn:ImageLabelButton = event.currentTarget as ImageLabelButton;
			}
			
			/**
			 * 功能：处理Widget加载并打开之后，向该widget发送要处理的数据
			 */ 
			private function onOpenedPostprocessor(event:AppEvent):void
			{
				//判断视野内搜索处理widget状态是否为打开，并且widgetID一致
				if(event.data.state as String == WidgetStates.WIDGET_OPENED && _postprocessorWidgetID == event.data.id as Number)
				{
					var data:Object = new Object();
					data.searchType = searchType;
					data.postprocessor = _postprocessorWidgetID;
					data.queryName = StringUtil.trim(searchValue);	//查询关键字
					AppEvent.dispatch(AppEvent.POST_PROCESS, data);
				}
			}
			
			/**
			 * 分类信息
			 */
			private function initRootCatalog():void
			{
				this.catalogGroup.removeAllElements();
				var poiXMLList:XMLList = configXML.poicatalogs.poicatalog;
				for(var i:Number = 0; i < poiXMLList.length(); i++)
				{
					var poiNameLabel:Label = new Label();
					poiNameLabel.text = poiXMLList[i].@name;
					poiNameLabel.setStyle("color", 0x535353);
					poiNameLabel.setStyle("fontFamily", "宋体");
					poiNameLabel.setStyle("fontSize", 12);
					var subCatalogXML:XMLList = poiXMLList[i].subcatalogs.subcatalog as XMLList;
					var hGrop:HGroup = new HGroup();
					hGrop.horizontalAlign = "left";
					hGrop.verticalAlign = "middle";
					hGrop.addElement(poiNameLabel);
					for(var j:Number=0; j< subCatalogXML.length();j++){
						var linkButton:LinkButton = new LinkButton();
						linkButton.id = subCatalogXML[j].@code;
						linkButton.label = subCatalogXML[j].@name;
						linkButton.setStyle("color", 0x4061ad);
						linkButton.setStyle("rollOverColor", 0x2B9DBF);
						linkButton.setStyle("textRollOverColor", 0xFFFFFF);
						linkButton.setStyle("fontFamily", "宋体");
						linkButton.setStyle("fontSize", 12);
						linkButton.setStyle("textDecoration", "none");
						linkButton.addEventListener(MouseEvent.CLICK, onClickCatalog);
						hGrop.addElement(linkButton);
					}
					this.catalogGroup.addElement(hGrop);
				}
			}
			
			/**
			 * 点击分类查询
			 */
			private function onClickCatalog(event:MouseEvent):void
			{
				var linkButton:LinkButton = event.target as LinkButton;
				searchValue = linkButton.id;
				searchValueLabel = linkButton.label;
				//打开视野内搜索处理widget
				AppEvent.dispatch(AppEvent.WIDGET_RUN, _postprocessorWidgetID);
				groupFadeResizeHide.play();
			}
			
			private function keyword_clickHandler(event:MouseEvent):void
			{
				if(keyword.text == "查找其他关键词")
				{
					keyword.text = "";
				}
			}
			
			private function keyword_mouseOutHandler(event:MouseEvent):void
			{
				if(keyword.text == "")
				{
					keyword.text = "查找其他关键词";
				}
			}
			
			private function seachHandler():void
			{
				if(keyword.text == "")
				{
					mx.controls.Alert.show("查询名称不能为空！","提示");
					return;
				}else{
					//打开视野内搜索处理widget
					searchValue = keyword.text;
					searchType = 1;
					AppEvent.dispatch(AppEvent.WIDGET_RUN, _postprocessorWidgetID);
					searchValueLabel = keyword.text;
					groupFadeResizeHide.play();
				}
			}
			
			//关闭widget
			protected function content_effectEndHandler(event:EffectEvent):void
			{
				//AppEvent.dispatch(AppEvent.SEARCHINEXTENT_CLOSE,"widgets/SearchInScreenExtent/SearchInScreenExtentWidget.swf");
			}
			
			private function pullUp(event:MouseEvent):void
			{
				//fadeResizeHide.play();
				AppEvent.dispatch(AppEvent.SEARCHINEXTENT_CLOSE,"widgets/SearchInScreenExtent/SearchInScreenExtentWidget.swf");
			}
			
			/**
			 * 收起面板
			 */ 
			private function pullUp_effectEndHandler(event:EffectEvent):void
			{
				searchPanel.visible = false;
				searchPanel.includeInLayout = false;
				currentSearchGroup.visible = true;
				currentSearchGroup.includeInLayout = true;
			}
			
			/**
			 * 更改条件
			 */ 
			private function changeSearchLink_clickHandler(event:MouseEvent):void
			{
				searchPanel.visible = true;
				searchPanel.includeInLayout = true;
				currentSearchGroup.visible = false;
				currentSearchGroup.includeInLayout = false;
				groupFadeResizeShow.play();
			}
			
			/*private function searchInScreen_clickHandler(event:MouseEvent):void
			{
				if(conentContainer.visible){
					conentContainer.visible = false;
					//fadeResizeHide.play();
				}else{
					conentContainer.visible = true;
					//fadeResizeShow.play();
				}
			}//*/
			
		]]>
	</fx:Script>
	<s:BorderContainer width="350" id="conentContainer" borderVisible="false" backgroundColor="0x2B9DBF" color="0x4D565B">
		<s:layout>
			<s:VerticalLayout horizontalAlign="left" verticalAlign="top" gap="2" paddingLeft="2" paddingRight="2" paddingBottom="2"/>
		</s:layout>
		<s:HGroup width="100%" height="24" paddingLeft="10" paddingRight="10" horizontalAlign="left" verticalAlign="middle">
			<s:Label text="在屏幕范围内搜索" width="100%" fontFamily="宋体" fontSize="12"
					 color="0xFFFFFF" fontWeight="normal" 
					 verticalAlign="middle"/>
			<s:Image source="@Embed(source='assets/images/pullup.png')"
					 horizontalAlign="right"
					 buttonMode="true"
					 click="pullUp(event)"/>
		</s:HGroup>
		<s:BorderContainer borderVisible="false" width="100%" height="100%" backgroundColor="0xFFFFFF">
			<s:layout>
				<s:VerticalLayout verticalAlign="top" paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10"/>
			</s:layout>
			<!-- 屏幕视野内分类搜索面板 -->
			<s:VGroup id="searchPanel" width="100%">
				<s:VGroup id="catalogGroup" width="100%" gap="3"/>
				<s:HGroup width="100%">
					<s:TextInput id="keyword" width="100%" 
								 text="查找其他关键词"
								 color="0xC0C0C0"
								 borderColor="0xC0C0C0"
								 borderAlpha="1"
								 focusThickness="0"
								 fontSize="14"
								 mouseOut="keyword_mouseOutHandler(event)"
								 enter="seachHandler()"
								 click="keyword_clickHandler(event)"/>
					<mx:Button skin="@Embed('assets/images/search/searchNormal.png')"
							   overSkin="@Embed('assets/images/search/searchPress.png')"
							   right="15"
							   click="seachHandler()"/>
				</s:HGroup>
			</s:VGroup>
			<s:HGroup id="currentSearchGroup" width="100%" visible="false" includeInLayout="false"
					  horizontalAlign="left" verticalAlign="middle" paddingRight="20">
				<s:Label text="当前搜索:" fontFamily="宋体" fontSize="12" fontWeight="normal"/>
				<s:Label text="{searchValueLabel}"
						 width="100%"
						 fontFamily="宋体" fontSize="12" fontWeight="bold"/>
				<mx:LinkButton label="更改条件" useHandCursor="true" paddingRight="7" 
							   fontFamily="宋体" fontSize="12" fontWeight="normal"
							   color="0x4061ad" textDecoration="underline"
							   click="changeSearchLink_clickHandler(event)"/>
			</s:HGroup>
		</s:BorderContainer>
	</s:BorderContainer>
</viewer:BaseWidget>