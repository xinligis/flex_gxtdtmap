<?xml version="1.0" encoding="utf-8"?>
<!--
客户端IP定位widget
马红涛  2012-02-16
-->
<viewer:BaseWidget xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:esri="http://www.esri.com/2008/ags"
				   xmlns:viewer="com.esri.viewer.*"
				   xmlns:toc="com.esri.viewer.components.toc.*"
				   widgetConfigLoaded="init()" xmlns:customskinbutton="com.esri.viewer.components.customskinbutton.*" >
	<fx:Script>
		<![CDATA[
			import com.esri.ags.FeatureSet;
			import com.esri.ags.geometry.Extent;
			import com.esri.ags.geometry.Geometry;
			import com.esri.ags.layers.GraphicsLayer;
			import com.esri.ags.tasks.QueryTask;
			import com.esri.ags.tasks.supportClasses.Query;
			import com.esri.ags.utils.GraphicUtil;
			import com.esri.viewer.remote.RemoteHandler;
			import com.esri.viewer.remote.RemoteResult;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.rpc.AsyncRequest;
			import mx.rpc.AsyncResponder;
			import mx.rpc.AsyncToken;
			import mx.rpc.Fault;
			import mx.rpc.events.FaultEvent;
			import mx.utils.StringUtil;
//			import mx.rpc.events.ResultEvent;
//			import mx.rpc.remoting.RemoteObject;
			
			private const ICON_BASE:String = "assets/images/iplocationwidget/";
			
			private var _pac:String;
			private var _ip:String;
			private var _fullNameField:String;
			private var _isDebug:Boolean = false;
			private var _extent:Extent = null;
			
			//ip定位的一个全图范围
			private var _fullZoomRegion:Extent = null;
			
			private function init():void
			{
				if(configXML)
				{
					if(configXML.hasOwnProperty("zoomregion"))
					{
						_fullZoomRegion = new Extent(Number(configXML.zoomregion.@xmin),
							Number(configXML.zoomregion.@ymin),
							Number(configXML.zoomregion.@xmax),
							Number(configXML.zoomregion.@ymax),
							map.spatialReference);
					}
					//borderContainer.addEventListener(MouseEvent.CLICK,locateBtn_clickHandler);
					
					//调用后台getPAC方法获取PAC码。温杨彪
					var remotefunction:String = String(configXML.remotefunction) || "ipLocation";
					_fullNameField = String(configXML.cityDivision.fullnamefield);
					if(String(configXML.debug) == "true")
					{
						_isDebug = true;
					}
					RemoteHandler.invoke(remotefunction,null,
						new AsyncResponder(getPAC_resultHandler,getPAC_faultHandler));
				}
			}
			
			private function getPAC_resultHandler(result:RemoteResult,token:Object = null):void
			{
				if(result == null)
				{
					return;
				}
				if(result==null||result.code != RemoteResult.RESULT_OK || result.content.toString() == "")
				{
					//说明没有查到PAC码
					ipLoctionLabel.text="无法获取您的位置信息";
				}
				else
				{
					if(_isDebug)
					{
						Alert.show(result.content.toString());
					}
					var results:Array = result.content.toString().split(",");
					_pac = results[0];
					_ip = results[1];
					doQuery();
				}
			}
			
			private function getPAC_faultHandler(fault:Fault,token:Object = null):void
			{
				trace("get PAC code error");
				ipLoctionLabel.text="无法获取您的位置信息";
			}
			
			private function doQuery():void
			{				
				_pac = StringUtil.trim(_pac);
				if(_pac == "")
				{
					ipLoctionLabel.text="无法获取您的位置信息";
					return;
				}
				var strWhere:String;
				var strValue:String;
				var queryTask:QueryTask = new QueryTask();
				strValue = configXML.cityDivision.url;
				queryTask.url = strValue;
				queryTask.useAMF = true;
				
				var query:Query = new Query();		
				query.returnGeometry = true;
				strWhere = configXML.cityDivision.districtmatch;
				strWhere = strWhere.replace("[value]", _pac);
				query.where = strWhere;			
				query.outFields = [_fullNameField];
				queryTask.execute(query, new AsyncResponder(queryExtent_compeleteHandler, queryExtent_faultHandler));
			}
			
			private function queryExtent_compeleteHandler(featureSet:FeatureSet, token:Object = null):void
			{
				if(featureSet.features.length == 0)
				{
					trace("没有可定位的城市");
					if(_isDebug)
					{
						Alert.show("没有可定位的城市");
					}
				}
				else
				{
					_extent = GraphicUtil.getGraphicsExtent(featureSet.features);
					ipLoctionLabel.text = featureSet.attributes[0][_fullNameField];
					locateBtn.visible = true;
					locateBtn.includeInLayout = true;
					borderContainer.addEventListener(MouseEvent.CLICK,locateBtn_clickHandler);
					borderContainer.buttonMode = true;
				}
			}
			
			private function queryExtent_faultHandler(info:Object, token:Object = null):void
			{
				trace(info.toString());
			}
			
			protected function locateBtn_clickHandler(event:MouseEvent):void
			{
				if(_extent != null)
				{
					if(_fullZoomRegion!=null)
					{
						if(_fullZoomRegion.intersects(_extent) == false)
						{
							Alert.show("正在定位的区域可能没有地图，是否定位？","", Alert.YES|Alert.NO,map,alert_closeHandler);
						}
						else
						{
							map.extent = _extent;
						}
					}
					else
					{
						map.extent = _extent;
					}
				}
				
			}
			
			private function alert_closeHandler(event:CloseEvent):void
			{
				if(event.detail == Alert.YES)
				{
					map.extent = _extent;
				}
			
			}
		]]>
	</fx:Script>	
	
	<fx:Declarations>
		
	</fx:Declarations>
	<s:HGroup id="borderContainer" height="27" verticalAlign="middle" gap="0">
		<s:Spacer width="10"/>
		<s:Label id="ipLoctionLabel" fontSize="12" fontFamily="宋体" 
				 color="#7d7d7d" 
				 text="正在获取您的位置信息.."/>
		<s:Spacer width="20"/>
		<s:Image id="locateBtn" source="@Embed('assets/images/iplocationwidget/unlocation.png')" visible="false" includeInLayout="false"/>
	</s:HGroup>
</viewer:BaseWidget>

